---
swagger: "2.0"
info:
  description: "This is API of a rythme game calls \"Group Rei\".\nIt is for our school project"
  version: "0.0.0"
  title: "Group Rei"
  termsOfService: "https://github.com/ericchang922"
  contact:
    email: "ericchang922@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/v0"
tags:
- name: "account"
  description: "包含登入及帳號管理等功能"
  externalDocs:
    description: "參考資料"
    url: "https://google.com/"

- name: "chip"
  description: "晶片相關功能"

- name: "item"
  description: "有關道具的所有功能"

- name: "pool"
  description: "抽卡相關的功能"
  externalDocs:
    description: "參考資料"
    url: "https://google.com/"

- name: "store"
  description: "商店"

- name: "plant"
  description: "種植機"

- name: "game"
  description: "遊玩、玩法相關"

- name: "suit"
  description: "服裝"

schemes:
- "https"
- "http"
paths:

# 帳號
  /account/login: # 登入
    post: # 種類
      tags: # 分類的標籤
        - "account"
      summary: "使用者登入" # 摘要
      description: "" #細節
      operationId: "login"
      consumes: # 請求格式
        - "application/json"
      produces: # 回傳格式
        - "application/json"
      parameters: # 請求結構
        - name: "body"
          in: "body"
          description: "傳出帳號密碼，密碼使用MD5"
          required: true # 是否為必要條件
          schema:
            $ref: "#/definitions/LoginData"
      responses: # 回傳
        200: # 成功
          description: "login successful"
          schema:
            $ref: "#/definitions/UserData"
        400:
          description: "login failed"
          schema:
            $ref: "#/definitions/BadRequest"

      security:
        - rei_auth:
          - "read:account"
          - "write:loginLog"

  /account/logout:
    post: # 種類
      tags: # 分類的標籤
        - "account"
      summary: "使用者登出" # 摘要
      description: "" #細節
      operationId: "logout"
      consumes: # 請求格式
        - "application/json"
      produces: # 回傳格式
        - "application/json"
      parameters: # 請求結構
        - name: "body"
          in: "body"
          description: "傳出帳號密碼，密碼使用MD5"
          required: true
          schema:
            $ref: "#/definitions/LogoutData"
      responses: # 回傳
        200: # 成功
          description: "logout successful"
          schema:
            $ref: "#/definitions/UserState"
        400:
          description: "logout failed"
          schema:
            $ref: "#/definitions/BadRequest"

      security:
        - rei_auth:
          - "read:account"

  /account/signup:
    post:
      tags:
        - "account"
      summary: "註冊帳號"
      description: ""
      operationId: "signup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/SignupData"
      responses:
        200:
          description: "singup successful"
          schema:
            $ref: "#/definitions/SingupResult"
        400:
          description: "signup failed"
          schema:
            $ref: "#/definitions/BadRequest"

      security:
        - rei_auth:
          - "write:account"

  /account/check-uid:
    get:
      tags:
        - "account"
      summary: "確認帳號是否已經存在"
      description: ""
      operationId: "checkUid"
      parameters:
        - name: "uid"
          in: "query"
          type: "string"
          required: true
      responses:
        200:
          description: ""
          schema:
            type: "object"
            properties:
              isUsed:
                type: "boolean"
        400:
          description: "checkUid failed"

      security:
        - rei_auth:
          - "read:account"

  /account/forget-password:
    post:
      tags:
        - "account"
      summary: "忘記密碼"
      description: ""
      operationId: "forgetPassword"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/forgetPasswordData"
      responses:
        200:
          description: "successful"
          schema:
            $ref: "#/definitions/forgetPasswordResult"
        400:
          description: "signup failed"
          schema:
            $ref: "#/definitions/BadRequest"

# item
  /item/list: #開包包
    get:
      tags:
        - "item"
      summary: "檢視道具"
      description: ""
      operationId: "itemList"
      parameters:
        - name: "uid"
          in: "query"
          type: "string"
          required: true
          description: "玩家帳號"
        - name: "token"
          in: "query"
          type: "string"
          required: true
          description: "token"
        - name: "filter"
          in: "body"
          required: true
          description: "過濾"
          schema:
            $ref: "#/definitions/FiltItem"
      responses:
        200:
          description: "get successful"
          schema:
            $ref: "#/definitions/ItemResult"
        400:
          description: "failed"
          schema:
            $ref: "#/definitions/BadRequest"

  /item/delete:
    post:
      tags:
        - "item"
      summary: "販售及分解道具"
      description: ""
      operationId: "deleteItems"

      parameters:
        - name: "body"
          in: "body"
          description: "傳入要販售或分解的道具名稱類別數量"
          required: true
          schema:
            $ref: "#/definitions/deleteItemsData"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ItemResult"
        400:
          description: "failed"
          schema:
            $ref: "#/definitions/BadRequest"
# 晶片
  /chip/upgrade:
    post:
      tags:
      - "chip"
      summary: "升級晶片"
      description: ""
      operationId: "upgrade"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/ChipUpgradeData"
      responses:
        200:
          description: "successful" #待改
          schema:
            $ref: "#/definitions/ChipUpgradeResult"
        400:
          description: "failed" #待改
          schema:
            $ref: "#/definitions/BadRequest"

  /chip/info:
    get:
      tags:
        - "chip"
      summary: "晶片資訊"
      description: ""
      operationId: "info"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "chipId"
          in: "query"
          type: "string"
          required: true
      # parameters:
      #   - name: "body"
      #     in: "body"
      #     description: ""
      #     required: true
      #     schema:
      #       $ref: "#/definitions/ChipInfoData"
      responses:
        200:
          description: "successful"
          schema:
            $ref: "#/definitions/ChipInfoResult"
        400:
          description: "failed"
          schema:
            $ref: "#/definitions/BadRequest"

  /chip/list:
    get:
      tags:
        - "chip"
      summary: "玩家晶片列表"
      description: ""
      operationId: "list"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/ChipListData"
      responses:
        200:
          description: "successful"
          schema:
            $ref: "#/definitions/ChipListResult"
        400:
          description: "failed"
          schema:
            $ref: "#/definitions/BadRequest"

  /chip/obj:
    get:
      tags:
        - "chip"
      summary: "晶片物件查詢"
      description: ""
      operationId: "obj"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/ChipObjData"
      responses:
        200:
          description: "successful"
          schema:
            $ref: "#/definitions/ChipObjResult"
        400:
          description: "failed"
          schema:
            $ref: "#/definitions/BadRequest"

  /chip/overlock:
    post:
      tags:
        - "chip"
      summary: "晶片突破"
      description: ""
      operationId: "overlock"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/ChipOverData"
      responses:
        200:
          description: "successful"
          schema:
            $ref: "#/definitions/ChipOverResult"
        400:
          description: "failed"
          schema:
            $ref: "#/definitions/BadRequest"

#抽卡
  /pool/list:
    get: # 種類
      tags: # 分類的標籤
        - "pool"
      summary: "打開抽卡介面" # 摘要
      description: "" #細節
      operationId: "openPool"
      consumes: # 請求格式
        - "application/json"
      produces: # 回傳格式
        - "application/json"
      parameters: # 請求結構
        - name: "body"
          in: "body"
          description: "紀錄指揮官目前的帳號貨幣數量"
          required: true
          schema:
            $ref: "#/definitions/OpenPurchaseData"
      responses: # 回傳
        200: # 成功
          description: "open purchase successful"
          schema:
            $ref: "#/definitions/OpenPurchaseResult"
        400:
          description: "open purchase failed"
          schema:
            $ref: "#/definitions/BadRequest"

      security:
        - rei_auth:
            - "read:account"

  /pool/purchase:
    post: # 種類
      tags: # 分類的標籤
        - "pool"
      summary: "抽卡" # 摘要
      description: "" #細節
      operationId: "pool"
      consumes: # 請求格式
        - "application/json"
      produces: # 回傳格式
        - "application/json"
      parameters: # 請求結構
        - name: "body"
          in: "body"
          description: "進行單抽或十連抽"
          required: true
          schema:
            $ref: "#/definitions/PurchaseData"
      responses: # 回傳
        200: # 成功
          description: "purchase successful"
          schema:
            $ref: "#/definitions/PurchaseResult"
        400:
          description: "purchase failed"
          schema:
            $ref: "#/definitions/BadRequest"

      security:
        - rei_auth:
            - "read:account"

# 商店
  /store/list:
    get:
      tags:
        - "store"
      summary: "查詢商店"
      description: "商店販賣物品清單"
      operationId: "getStoreList"
      consumes:
        - "applictaion/json"
      produces:
        - "application/json"
      parameters:
        - name: "uid"
          in: "query"
          type: "string"
          required: true
          description: "根據查詢者不同將會有不一樣的購買紀錄（例如有限量的商品已經售罄）"
        - name: "mu"
          in: "query"
          type: "integer"
          required: true
          description: "取得玩家現有立日已確定資料正確性"
        - name: "konpeito"
          in: "query"
          type: "integer"
          required: true
          description: "取得玩家現有星星糖數量驗證資料正確性"
      responses:
        200:
          description: "get stroe list successful"
          schema:
            $ref: "#/definitions/StoreList"
        400:
          description: "get store list failed"
          schema:
            $ref: "#/definitions/BadRequest"

  /store/buy:
    post:
      tags:
        - "store"
      summary: "在商店中購買物件"
      description: ""
      operationId: "buy"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          schema:
            $ref: "#/definitions/Cart"
      responses:
        200:
          description: "buy successful"
          schema:
            $ref: "#/definitions/BuyResult"
        400:
          description: "buy failed"
          schema:
            $ref: "#/definitions/BadRequest"

#種植機
  /plant/add:
    post:
      tags:
        - "plant"
      summary: 種植植物
      description: ""
      operationId: "addPlant"
      consumes: # 請求格式
        - "application/json"
      produces: # 回傳格式
        - "application/json"
      parameters: # 請求結構
        - name: "body"
          in: "body"
          description: "傳入要種的植物種類及數量"
          required: true
          schema:
            $ref: "#/definitions/AddPlantData"
      responses: # 回傳
        200: # 成功
          description: "add plant successful"
          schema:
            $ref: "#/definitions/AddPlantResult"
        400:
          description: "add plant failed"
          schema:
            $ref: "#/definitions/BadRequest"

  /plant/delete:
    post:
      tags:
        - "plant"
      summary: 取消當前種植植物
      description: ""
      operationId: "deletePlant"
      consumes: # 請求格式
        - "application/json"
      produces: # 回傳格式
        - "application/json"
      parameters: # 請求結構
        - name: "body"
          in: "body"
          description: "傳入要取消的植物種類及數量"
          required: true
          schema:
            $ref: "#/definitions/AddPlantData"
      responses: # 回傳
        200: # 成功
          description: "delete plant successful"
          schema:
            $ref: "#/definitions/DeletePlantResult"
        400:
          description: "delete plant failed"
          schema:
            $ref: "#/definitions/BadRequest"

  /plant/query:
    get:
      tags:
        - "plant"
      summary: "查詢植物狀況"
      description: ""
      operationId: "queryPlant"
      consumes:
        - "applictaion/json"
      produces:
        - "application/json"
      parameters:
        - name: "uid"
          in: "query"
          type: "string"
          required: true
          description: "玩家帳號"
        - name: "token"
          in: "query"
          type: "string"
          required: true
          description: "token"
      responses:
        200:
          description: "query plant successful"
          schema:
            $ref: "#/definitions/QueryPlantResult"
        400:
          description: "query plant failed"
          schema:
            $ref: "#/definitions/BadRequest"

# game
  /game/mode:
    post:
      tags:
        - "game"
      summary: "選擇遊戲模式"
      description: "可選擇主線、活動等不同的關卡模式"
      operationId: "gameMode"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          schema:
            $ref: "#/definitions/SelectModeData"
      responses:
        200:
          description: "select mode successful"
          schema:
            $ref: "#/definitions/SelectModeData"
        400:
          description: "select mode failed"
          schema:
            $ref: "#/definitions/BadRequest"


  /suit/upgrade:
    post:
      tags:
        - "suit"
      summary: "服裝升級"
      description: ""
      operationId: "upgrade"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          schema:
            $ref: "#/definitions/SuitUpgradeData"
      responses:
        200:
          description: "select mode successful"
          schema:
            $ref: "#/definitions/SuitUpgradeRequest"
        400:
          description: "select mode failed"
          schema:
            $ref: "#/definitions/BadRequest"

  /suit/obj:
    post:
      tags:
        - "suit"
      summary: "服裝物件查詢"
      operationId: "obj"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          schema:
            $ref: "#/definitions/SuitObjData"
      responses:
        200:
          description: "select mode successful"
          schema:
            $ref: "#/definitions/SuitObjRequest"
        400:
          description: "select mode failed"
          schema:
            $ref: "#/definitions/BadRequest"



securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "https://petstore.swagger.io/oauth/authorize"
    flow: "implicit"
    scopes:
      read:pets: "read your pets"
      write:pets: "modify pets in your account"

# schema
definitions:
  # public
  BadRequest: # 錯誤格式
    type: "object"
    properties:
      statusCode:
        type: "integer"
        format: "int"
      failedMsg:
        type: "string"

  # account
  LoginData: # 帳號密碼
    type: "object"
    properties:
      uid:
        type: "string"
      password:
        type: "string"
      timezone:
        type: "string"

  UserData: # 使用者資料
    type: "object"
    properties:
      token:
        type: string
      name:
        type: "string"
      birthday:
        type: "string"
        format: "date"
      phone:
        type: "string"
      memberLevel:
        type: "integer"
        format: "int"
        description: "金銀銅..."
      email:
        type: "string"

  LogoutData: #登出
    type: "object"
    properties:
      token:
        type: "string"

  UserState: #使用者狀態
    type: "object"
    properties:
      state:
        type: "string"
      stateMessage:
        type: "string"

  SignupData:
    type: "object"
    properties:
      uid:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
      phone:
        type: "string"
      birthday:
        type: "string"
        format: "date"
        required:
          - "fasle"
      password:
        format: "string"

  SingupResult:
    type: "object"
    properties:
      state:
        type: "string"
      stateMessage:
        type: "string"

  forgetPasswordData:
    type: "object"
    properties:
      token:
        type: "string"

  forgetPasswordResult:
    type: "object"
    properties:
      message:
        type: "string"

  # chip
  ChipUpgradeData: # 晶片強化資料
    type: "object"
    properties:
      token:
        type: "string"
      objItemOid:
        type: "integer"
      typeId:
        type: "integer"
      U:
        type: "array"
        items:
          type: "object"
          properties:
            UType:
              type: "integer"
            UNum:
              type: "integer"
      mu:
        type: "array"
        items:
          type: "object"
          properties:
            having:
              type: "integer"
            cost:
              type: "integer"

  ChipUpgradeResult:
    type: "object"
    properties:
      mu:
        type: "integer"
      expAfter:
        type: "number"
        format: "double"


  # ChipInfoData: # 晶片(?)
  #   type: "object"
  #   properties:
  #     chipId:
  #       type: "integer"

  ChipInfoResult:
    type: "object"
    properties:
      chipLevel:
        type: "string"
      itemId:
        type: "string"
      name:
        type: "string"
      content:
        type: "string"
      attack:
        type: "integer"
      chipCategory:
        type: "string"
      upgradeCost:
        type: "array"
        items:
          example: item_id
      overlock:
          type: "array"   #[]
          items:
            type: "object"    #{a}
            properties:
              atb0004:
                type: "array"
                items:
                  type: "object"
                  properties:
                    ability_id:
                      type: string
                    value:
                      type: "array"
                      items:
                        type: "integer"
              atb0005:
                type: "array"
                items:
                  type: "object"
                  properties:
                    ability_id:
                      type: string
                    value:
                      type: "array"
                      items:
                        type: "integer"

  ChipListData:
    type: "object"
    properties:
      token:
        type: "string"

  ChipListResult:
    type: "object"
    properties:
      objItems:
        type: "array"
        items:
            type: "object"    #{a}
            properties:
              objItemOid:
                type: "string"
              itemId:
                type: "string"
              exp:
                type: "integer"
              attribute:
                type: "string"

  ChipObjData:
    type: "object"
    properties:
      token:
        type: "string"
      objItemOid:
        type: "string"

  ChipObjResult:
    type: "object"
    properties:
      itemId:
        type: "string"
      chipId:
        type: "string"
      exp:
        type: "integer"
      attribute:
        type: "string"

  ChipOverData:
    type: "object"
    properties:
      token:
        type: "string"
      objItemOid:
        type: "string"

  ChipOverResult:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"


  # item
  ItemList: # 查看道具
    type: "object"
    properties:
      token:
        type: "string"
      filter:
        type: "array"
        items:
          type: "object"

  ItemResult: # 使用者資料
    type: "object"
    properties:
      "items":
        type: "array"
        items:
          type: "object"
          properties:
            itemName:
              type: "string"
            itemType:
              type: "string"
            amount:
              type: "integer"
  FiltItem: #過濾條件
    type: "array"
    items:
      type: "object"
      properties:
        itemType:
          type: "integer"
        itemRare:
          type: "integer"

  deleteItemsData: # 分解/出售道具
    type: "object"
    properties:
      token:
        type: "string"
      itemsInfo:
        type: "array"
        items:
          type: "object"
          properties:
            itemId:
              type: "string"
            amount:
              type: "integer"
      class:
        type: "integer"

  # pool
  OpenPurchaseData: #打開卡池
    type: "object"
    properties:
      token:
        type: "string"
      konpeito: #星星糖
        type: "integer"
        format: "int"
      nuclearWaste: #核廢料(友情抽卡材料)
        type: "integer"
        format: "int"
  OpenPurchaseResult: #打開卡池結果
    type: "object"
    properties:
      purchase:
        type: "array"
        items:
          type: "object"
          properties:
            poolId: #卡池編號
              type: "integer"
              format: "int"
            poolName: #卡池名稱
              type: "string"
            content: #文字敘述
              type: "string"
            oneTimeCost: #單次花費
              type: "integer"
              format: "int"
            history: #抽卡紀錄(方便算保底)
              type: "array"
              items:
                type: "object"
                properties:
                  itemName: #道具名稱
                    type: "string"
                  itemClass: #道具類別
                    type: "string"
                  itemNumber: #道具數量
                    type: "integer"
                    format: "int"
                  purchaseTime: #抽卡時間
                    type: "string"
                    format: "date"
            endTime: #結束時間
              type: "string"
              format: "date"

  PurchaseData: #抽卡
    type: "object"
    properties:
      token:
        type: "string"
      poolId:
        type: "integer"
        format: "int"
      konpeito: #星星糖
        type: "integer"
      nuclearWast:
        type: "integer"
      poo:
        type: "integer"
      purchaseCount:
        type: "integer"
        format: "int"
      spend:
        type: "integer"
        format: "int"

  PurchaseResult: #抽卡結果
    type: "object"
    properties:
      itemsInfo:
        type: "array"
        items:
          type: "object"
          properties:
            itemName:
              type: "string"
            itemType:
              type: "string"
            itemAmount:
              type: "integer"
              format: "int"
      konpeito:
        type: "integer"
        format: "int"
      nuclearWaste:
        type: "integer"
      poo:
        type: "integer"

  # store
  StoreList: # 商店列表
    type: object
    properties:
      product:
        type: "array"
        items:
          type: "object"
          properties:
            itemId:
              type: "string"
            itemName:
              type: "string"
            itemTypeId:
              type: "integer"
            leftNumber:
              type: "integer"
            price:
              type: "integer"
      konpeito:
        type: "integer"
        # 為了避免在向伺服器發送請求後竄改內容，因此會再回傳一次星星糖的數值"

  Cart:
    type: "object"
    properties:
      token:
        type: "string"
      itemId:
        type: "integer"
      itemNumber:
        type: "integer"
      mu:
        type: "integer"
      konpeito:
        type: "integer"
      poo:
        type: "integer"

  BuyResult:
    type: "object"
    properties:
      leftNumber:
        type: "integer"
      mu:
        type: "integer"
      konpeito:
        type: "integer"
      poo:
        type: "integer"
      status:
        type: "string"

  # plant
  AddPlantData: #種植物
    type: "object"
    properties:
      token:
        type: "string"
      seed:
        type: "array"
        items:
          type: "object"
          properties:
            seedrole:
              type: "integer"
            seedId:
              type: "string"
            seedQuan:
              type: "integer"
  AddPlantResult:
    type: "object"
    properties:
      state:
        type: "string"
      time:
        type: "string"
        format: "timestamp"
  DeletePlantResult: #刪植物
    type: "object"
    properties:
      state:
        type: "string"
      returnitem:
        type: "integer"

  QueryPlantResult: #查植物
    type: "object"
    properties:
      role1:
        type: "array"
        items:
          type: "object"
          properties:
            seedId:
              type: "integer"
              format: "int"
            seedQuan:
              type: "integer"
              format: "int"
            time:
              type: "string"
              format: "timestamp"
      role2:
        type: "array"
        items:
          type: "object"
          properties:
            seedId:
              type: "integer"
              format: "int"
            seedQuan:
              type: "integer"
              format: "int"
            time:
              type: "string"
              format: "timestamp"
      role3:
        type: "array"
        items:
          type: "object"
          properties:
            seedId:
              type: "integer"
              format: "int"
            seedQuan:
              type: "integer"
              format: "int"
            time:
              type: "string"
              format: "timestamp"

  # game
  SelectModeData:
    type: "object"
    properties:
      modeId:
        type: "integer"
      chapter:
        type: "array"
        items:
          type: "object"
          properties:
            chapterId:
              type: "integer"
            name:
              type: "string"
            img:
              type: "string"

  SuitUpgradeData:
    type: "object"
    properties:
      token:
        type: "string"
      objItemOid:
        type: "string"
      mu:
        type: "object"
        properties:
          having:
            type: "integer"
          cost:
            type: "integer"

  SuitUpgradeRequest:
    type: "object"
    properties:
      mu:
        type: "integer"
      expAfter:
        type: "integer"

  SuitObjData:
    type: "object"
    properties:
      token:
        type: "string"
      objItemOid:
        type: "string"

  SuitObjRequest:
    type: "object"
    properties:
      itemId:
        type: "string"
      suitId:
        type: "string"
      life:
        type: "integer"
      defense:
        type: "integer"
      exp:
        type: "integer"



externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
